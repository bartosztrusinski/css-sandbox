---
import MainLayout from "../layouts/MainLayout.astro";

type Panel = {
  id: number;
  title: string;
  content: string;
  isExpanded: boolean;
};

const panels: Panel[] = [
  {
    id: 1,
    title: "Grid is awesome",
    content:
      "Lorem ipsum, dolor sit amet consectetur adipisicing elit. Sunt necessitatibus, odit provident, inventore similique ea ex quis reiciendis repudiandae alias fugiat consequatur autem ipsa, animi quibusdam voluptates voluptate beatae natus?",
    isExpanded: true,
  },
  {
    id: 2,
    title: "It's full of neat tricks",
    content:
      "Lorem ipsum dolor, sit amet consectetur adipisicing elit. Eveniet vitae harum dolorem ab eligendi. Minima, at. Distinctio nesciunt sapiente provident error vero ex. Totam non nobis ipsa, facilis cumque autem?",
    isExpanded: false,
  },
  {
    id: 3,
    title: "Tell me more",
    content:
      "Lorem ipsum dolor sit amet consectetur, adipisicing elit. Iusto, amet!",
    isExpanded: false,
  },
];
---

<MainLayout title="Grid Height Transition">
  <main>
    <section>
      <h1>Going from 0 to auto - the easy way</h1>
      {
        panels.map((panel) => (
          <article>
            <button
              aria-expanded={panel.isExpanded}
              aria-controls={`panel${panel.id}-content`}
            >
              <h3 id={`panel${panel.id}-title`}>{panel.title}</h3>
              <section
                id={`panel${panel.id}-content`}
                role="region"
                aria-hidden={!panel.isExpanded}
                aria-labelledby={`panel${panel.id}-title`}
              >
                <p>{panel.content}</p>
              </section>
            </button>
          </article>
        ))
      }
    </section>
    <section>
      <h2>Other content here</h2>
      <p>
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Suscipit ea,
        minus iste vero laborum voluptate quae nihil delectus deserunt dolor
        harum molestiae magnam facilis eligendi quas adipisci dicta. Tempora,
        voluptatibus?
      </p>
    </section>
  </main>
</MainLayout>

<script>
  const panels = document.querySelectorAll("article");

  panels.forEach((panel) => {
    panel.addEventListener("click", () => {
      const contentEl = panel.querySelector("section")!;
      const button = panel.querySelector("button")!;
      const isPanelOpen = button.getAttribute("aria-expanded") === "true";

      contentEl.setAttribute("aria-hidden", String(isPanelOpen));
      button.setAttribute("aria-expanded", String(!isPanelOpen));
    });
  });
</script>

<style>
  body {
    background-image: linear-gradient(
      120deg,
      hsl(258, 69%, 28%),
      hsl(337, 76%, 33%)
    );
    backdrop-filter: saturate(1.2) contrast(1.2);
    display: flex;
    align-items: center;
  }
  main {
    width: min(80ch, 100% - 4rem);
    margin-inline: auto;
    padding: 2rem;
    border-radius: 1rem;
    background-color: hsl(237, 21%, 17%);
    color: hsl(0, 0%, 96%);
    box-shadow: -0.1rem 0.1rem 0.8rem 0.4rem hsla(240, 17%, 8%, 0.5);

    & > section {
      margin-bottom: 1.6rem;
    }
  }

  h1,
  h2,
  h3 {
    text-wrap: pretty;
    padding-bottom: 0.5rem;
    line-height: 1.3;
  }

  h1 {
    font-size: 2.4rem;
    padding-bottom: 1rem;
    color: var(--color-primary);
  }

  h2 {
    font-size: 2.1rem;
    color: var(--color-primary);
  }

  h3 {
    font-size: 1.8rem;
  }

  p {
    font-size: 1.1rem;
    line-height: 1.6;
  }

  article {
    --border-radius: 0.4rem;
    --border-width: 0.125rem;

    background-color: hsl(233, 17%, 21%);
    border: var(--border-width) solid hsl(253, 7%, 52%);
    border-block-width: calc(var(--border-width) / 2);

    &:first-of-type {
      border-top-width: var(--border-width);
      border-top-left-radius: var(--border-radius);
      border-top-right-radius: var(--border-radius);
    }

    &:last-of-type {
      border-bottom-width: var(--border-width);
      border-bottom-left-radius: var(--border-radius);
      border-bottom-right-radius: var(--border-radius);
    }

    & section {
      display: grid;
      grid-template-rows: 1fr;
      transition: grid-template-rows 240ms ease-in-out;

      & p {
        overflow: hidden;
      }

      &[aria-hidden="true"] {
        grid-template-rows: 0fr;
      }
    }
  }

  button {
    width: 100%;
    appearance: none;
    background: inherit;
    outline: none;
    padding: 1rem 1.6rem;
    text-align: start;
    border: none;
    color: inherit;
    font-size: inherit;
    cursor: pointer;

    &:focus-visible h3 {
      text-decoration: underline solid var(--color-primary) 0.3rem;
    }
  }
</style>
